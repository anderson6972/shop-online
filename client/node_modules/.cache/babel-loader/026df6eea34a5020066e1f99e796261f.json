{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from \"./user.action\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(user);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  //esta funcion me reune todos los user saga en una misma variable\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","console","log","id","data","error","getSnapshotFromUserAuth","userAuth","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nimport { signInSuccess, signInFailure } from \"./user.action\";\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);       \r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        console.log(user);\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try {        \r\n        const userRef = yield call(createUserProfileDocument,userAuth);        \r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()})); \r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try {        \r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* userSagas(){//esta funcion me reune todos los user saga en una misma variable\r\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\r\n}"]},"metadata":{},"sourceType":"module"}