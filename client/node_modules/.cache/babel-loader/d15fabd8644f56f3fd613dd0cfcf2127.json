{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'; //libreria para usar el localstore\n\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; // if(process.env.NODE_ENV === 'develoment'){//esto es para evitar logs en produccion solo en pruebas\n//     middlewares.push(logger);\n// }\n\nmiddlewares.push(logger);\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAA6C;;AAC7C,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;AACA;AACA;;AACAC,WAAW,CAACC,IAAZ,CAAiBN,MAAjB;AACA,OAAO,MAAMO,KAAK,GAAGV,WAAW,CAAEM,WAAF,EAAeL,eAAe,CAAC,GAAGO,WAAJ,CAA9B,CAAzB;AAEPD,cAAc,CAACI,GAAf,CAAmBN,QAAnB;AAEA,OAAO,MAAMO,SAAS,GAAGV,YAAY,CAACQ,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\r\nimport { persistStore } from 'redux-persist';//libreria para usar el localstore\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './root-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\n// if(process.env.NODE_ENV === 'develoment'){//esto es para evitar logs en produccion solo en pruebas\r\n//     middlewares.push(logger);\r\n// }\r\nmiddlewares.push(logger);\r\nexport const store = createStore( rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}