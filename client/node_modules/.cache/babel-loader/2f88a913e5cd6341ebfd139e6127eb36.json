{"ast":null,"code":"var _jsxFileName = \"E:\\\\Anderson\\\\Cursos Programacion\\\\React\\\\shop-online\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredential] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password); // try { //ya no se necesita Saga lo manejara\n    //     await auth.signInWithEmailAndPassword(email,password);\n    //     this.setState({ email:'', password:''});\n    // } catch (error) {\n    //     console.log(error);\n    // }       \n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredential({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        label: \"email\",\n        handledChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        label: \"password\",\n        handledChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"SIGN IN WITH GOOGLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"gdGypdMBbAW1TAgTdhNB0Wv10BE=\");\n\n_c = SignIn;\n\nconst mapDispachToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispachToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","CustomButton","googleSignInStart","emailSignInStart","FormInput","SignIn","userCredentials","setCredential","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispachToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AAGA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,8BAApD;AAEA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAAA;;AACxD,QAAM,CAACI,eAAD,EAAkBC,aAAlB,IAAoCR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAAlD;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEAT,IAAAA,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAhB,CAHgC,CAIhC;AACA;AACA;AACA;AACA;AACA;AACH,GAVD;;AAYA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAT,IAAAA,aAAa,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACS,IAAD,GAAQD;AAA7B,KAAD,CAAb;AACH,GAJD;;AAOI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACA,QAAC,SAAD;AACQ,QAAA,IAAI,EAAC,OADb;AAEQ,QAAA,IAAI,EAAC,OAFb;AAGQ,QAAA,KAAK,EAAEF,KAHf;AAIQ,QAAA,KAAK,EAAC,OAJd;AAKQ,QAAA,aAAa,EAAEK,YALvB;AAMQ,QAAA,QAAQ;AANhB;AAAA;AAAA;AAAA;AAAA,cADA,eASI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEJ,QAHX;AAII,QAAA,KAAK,EAAC,UAJV;AAKI,QAAA,aAAa,EAAEI,YALnB;AAMI,QAAA,QAAQ;AANZ;AAAA;AAAA;AAAA;AAAA,cATJ,eAkBI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAEX,iBAArC;AAAwD,UAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCP,CA3DD;;GAAMG,M;;KAAAA,M;;AA6DN,MAAMY,iBAAiB,GAAGC,QAAQ,KAAK;AACnChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADE;AAEnCC,EAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACf,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFZ,CAAL,CAAlC;;AAKA,eAAeT,OAAO,CAAC,IAAD,EAAMiB,iBAAN,CAAP,CAAgCZ,MAAhC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\r\n\r\nimport './sign-in.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {   \r\n    const [userCredentials, setCredential]  = useState({email: '', password: ''})\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n                        \r\n        emailSignInStart(email, password);\r\n        // try { //ya no se necesita Saga lo manejara\r\n        //     await auth.signInWithEmailAndPassword(email,password);\r\n        //     this.setState({ email:'', password:''});\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }       \r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        \r\n        setCredential({...userCredentials, [name]: value })\r\n    }\r\n            \r\n\r\n        return (\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                        name='email'\r\n                        type='email'\r\n                        value={email}\r\n                        label='email'\r\n                        handledChange={handleChange}\r\n                        required />\r\n\r\n                    <FormInput\r\n                        name='password'\r\n                        type='password'\r\n                        value={password}\r\n                        label='password'\r\n                        handledChange={handleChange}\r\n                        required />\r\n\r\n\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'>SIGN IN</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                            SIGN IN WITH GOOGLE\r\n                        </CustomButton>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nconst mapDispachToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null,mapDispachToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}