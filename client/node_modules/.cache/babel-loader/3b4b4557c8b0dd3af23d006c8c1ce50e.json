{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FECTH_COLLECTIONS_START\n});\nexport const fetchCollectionsSucces = collectionsMap => ({\n  type: ShopActionTypes.FECTH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FECTH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  const collectionRef = firestore.collection('collections');\n  dispatchEvent(fetchCollectionsStart()); //esto activa el action fetchCollectionsStar y se puede hacer gracias a redux-thunk\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatchEvent(fetchCollectionsSucces(collectionsMap));\n  }).catch(error => dispatchEvent(fetchCollectionsFailure(error.message)));\n};","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FECTH_COLLECTIONS_START","fetchCollectionsSucces","collectionsMap","FECTH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FECTH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","collectionRef","collection","dispatchEvent","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,QAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,aAAa,CAACb,qBAAqB,EAAtB,CAAb,CAF4C,CAEL;;AAEnCW,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AAChC,UAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAH,IAAAA,aAAa,CAACV,sBAAsB,CAACC,cAAD,CAAvB,CAAb;AACH,GAHD,EAGGa,KAHH,CAIIC,KAAK,IAAIL,aAAa,CAACN,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAMP,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FECTH_COLLECTIONS_START,    \r\n});\r\n\r\nexport const fetchCollectionsSucces = collectionsMap => ({\r\n    type: ShopActionTypes.FECTH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FECTH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatchEvent(fetchCollectionsStart());//esto activa el action fetchCollectionsStar y se puede hacer gracias a redux-thunk\r\n    \r\n        collectionRef.get().then(snapshot =>{\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatchEvent(fetchCollectionsSucces(collectionsMap));\r\n        }).catch(\r\n            error => dispatchEvent(fetchCollectionsFailure(error.message))\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}