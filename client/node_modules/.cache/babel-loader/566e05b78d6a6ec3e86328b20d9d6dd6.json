{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSucces, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    //este codigo reemplaza el thunk redux, es decir el codigo comentado abajo y se quita del sjop.action\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSucces(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //     collectionRef.get().then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSucces(collectionsMap));\n  // }).catch(\n  //     error => dispatch(fetchCollectionsFailure(error.message))\n  // );\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FECTH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSucces","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FECTH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,sBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAErC,MAAI;AAAC;AACD,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GAToC,CAWrC;AACA;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,SAAS,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,qBAA1C,CAAf;AACH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSucces,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    \r\n    try {//este codigo reemplaza el thunk redux, es decir el codigo comentado abajo y se quita del sjop.action\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSucces(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n\r\n    //     collectionRef.get().then(snapshot => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //     dispatch(fetchCollectionsSucces(collectionsMap));\r\n    // }).catch(\r\n    //     error => dispatch(fetchCollectionsFailure(error.message))\r\n    // );\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(ShopActionTypes.FECTH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}