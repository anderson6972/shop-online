{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'; //libreria para usar el localstore\n\nimport logger from 'redux-logger';\nimport createSagaMiddleware from '@redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'develoment') {\n  //esto es para evitar logs en produccion solo en pruebas\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["E:/Anderson/Cursos Programacion/React/shop-online/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAA6C;;AAC7C,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,aAAjC;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAAyC;AAAC;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAAEM,WAAF,EAAeL,eAAe,CAAC,GAAGO,WAAJ,CAA9B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware} from 'redux';\r\nimport { persistStore } from 'redux-persist';//libreria para usar el localstore\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from '@redux-saga';\r\n\r\nimport { fetchCollectionsStart } from './shop/shop.sagas';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV === 'develoment'){//esto es para evitar logs en produccion solo en pruebas\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore( rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(fetchCollectionsStart);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}